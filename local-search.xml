<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>全屏事件触发和监听.md</title>
    <link href="/2020/06/19/%E5%85%A8%E5%B1%8F%E4%BA%8B%E4%BB%B6%E8%A7%A6%E5%8F%91%E5%92%8C%E7%9B%91%E5%90%AC/"/>
    <url>/2020/06/19/%E5%85%A8%E5%B1%8F%E4%BA%8B%E4%BB%B6%E8%A7%A6%E5%8F%91%E5%92%8C%E7%9B%91%E5%90%AC/</url>
    
    <content type="html"><![CDATA[<pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 注意参数大小写 --&gt;</span><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"zh-cn"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Fullscreen API<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span>        body &#123;            font-family: sans-serif;        &#125;<span class="css">        <span class="hljs-selector-id">#outer</span> &#123;</span>            width: 400px;            height: 440px;            position: absolute;            top: calc(50% - 200px);            left: calc(50% - 200px);            text-align: center;        &#125;<span class="css">        <span class="hljs-selector-id">#fs-button</span> &#123;</span>            color: white;            padding: 16px;<span class="css">            <span class="hljs-selector-tag">background-color</span>: <span class="hljs-selector-id">#0080FF</span>;</span>            border-radius: 6px;            cursor: pointer;<span class="css">            <span class="hljs-selector-tag">box-shadow</span>: 0 2<span class="hljs-selector-tag">px</span> 4<span class="hljs-selector-tag">px</span> <span class="hljs-selector-tag">rgba</span>(0, 0, 0, 0<span class="hljs-selector-class">.2</span>);</span>        &#125;<span class="css">        <span class="hljs-selector-id">#fs-button</span><span class="hljs-selector-pseudo">:hover</span> &#123;</span>            color: white;<span class="css">            <span class="hljs-selector-tag">background-color</span>: <span class="hljs-selector-id">#00AAFF</span>;</span>        &#125;<span class="css">        <span class="hljs-selector-class">.azure_loading</span> &#123;</span>            width: 129px;            height: 134px;            position: relative;            top: calc(50% - 67px);        &#125;<span class="css">        <span class="hljs-selector-id">#fullscreen-area</span> &#123;</span>            width: 400px;            height: 400px;<span class="css">            <span class="hljs-selector-tag">background-color</span>: <span class="hljs-selector-id">#767676</span>;</span>            display: block;            -webkit-animation-name: moveBG_wk;            -webkit-animation-duration: 5s;            -webkit-animation-iteration-count: infinite;            -webkit-animation-timing-function: linear;            animation-name: moveBG;            animation-duration: 5s;            animation-iteration-count: infinite;            animation-timing-function: linear;        &#125;<span class="css">        <span class="hljs-keyword">@keyframes</span> moveBG &#123;</span>            100% &#123;                background-position: 128px -128px;            &#125;        &#125;<span class="css">        <span class="hljs-comment">/* fullscreen */</span></span><span class="css">        <span class="hljs-selector-pseudo">:-webkit-full-screen</span> &#123;</span>            width: 100%;            height: 100%;<span class="css">            <span class="hljs-selector-tag">background-color</span>: <span class="hljs-selector-id">#999999</span>;</span>        &#125;<span class="css">        <span class="hljs-selector-pseudo">:-ms-fullscreen</span> &#123;</span>            position: absolute;            left: calc(50% - 200px);            top: calc(50% - 200px);<span class="css">            <span class="hljs-selector-tag">background-color</span>: <span class="hljs-selector-id">#F0E0E0</span>;</span>        &#125;<span class="css">        <span class="hljs-selector-pseudo">:fullscreen</span> &#123;</span>            position: absolute;            left: calc(50% - 200px);            top: calc(50% - 200px);<span class="css">            <span class="hljs-selector-tag">background-color</span>: <span class="hljs-selector-id">#E0E0F0</span>;</span>        &#125;<span class="css">        <span class="hljs-selector-pseudo">:-ms-fullscreen</span><span class="hljs-selector-pseudo">::-ms-backdrop</span> &#123;</span>            width: 100%;            height: 100%;<span class="css">            <span class="hljs-selector-tag">background-color</span>: <span class="hljs-selector-id">#999</span>;</span>        &#125;    <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"outer"</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"fullscreen-area"</span>&gt;</span>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"fs-button"</span>&gt;</span>点击全屏<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="actionscript">        <span class="hljs-keyword">var</span> check_Text =</span><span class="javascript">            <span class="hljs-string">"WK: "</span> + <span class="hljs-built_in">document</span>.webkitFullscreenEnabled + <span class="hljs-string">"\n"</span> +</span><span class="javascript">            <span class="hljs-string">"Moz: "</span> + <span class="hljs-built_in">document</span>.mozFullScreenEnabled + <span class="hljs-string">"\n"</span> +</span><span class="javascript">            <span class="hljs-string">"MS: "</span> + <span class="hljs-built_in">document</span>.msFullscreenEnabled + <span class="hljs-string">"\n"</span> +</span><span class="javascript">            <span class="hljs-string">"Normal: "</span> + <span class="hljs-built_in">document</span>.fullScreenEnabled</span><span class="javascript">        <span class="hljs-built_in">console</span>.log(check_Text)</span><span class="actionscript">        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">presentFullScreen</span><span class="hljs-params">()</span> </span>&#123;</span><span class="javascript">            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">document</span>.fullscreenEnabled) &#123;</span><span class="javascript">                <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"fullscreen-area"</span>).requestFullscreen().then(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'resolved'</span>))</span><span class="javascript">            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">document</span>.webkitFullscreenEnabled) &#123;</span><span class="javascript">                <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"fullscreen-area"</span>).webkitRequestFullscreen()</span><span class="javascript">            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">document</span>.mozFullScreenEnabled) &#123;</span><span class="javascript">                <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"fullscreen-area"</span>).mozRequestFullScreen();</span><span class="javascript">            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">document</span>.msFullscreenEnabled) &#123;</span><span class="javascript">                <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"fullscreen-area"</span>).msRequestFullscreen();</span><span class="actionscript">            &#125; <span class="hljs-keyword">else</span> &#123;</span><span class="actionscript">                alert(<span class="hljs-string">"Fullscreen API 不存在"</span>)</span>            &#125;        &#125;<span class="javascript">        <span class="hljs-keyword">var</span> btn = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"fs-button"</span>)</span><span class="actionscript">        btn.addEventListener(<span class="hljs-string">"click"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>&#123;</span>            presentFullScreen()        &#125;)<span class="javascript">        <span class="hljs-built_in">document</span>.addEventListener(<span class="hljs-string">"fullscreenchange"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><span class="actionscript">            FShandler(<span class="hljs-string">"normal"</span>)</span>        &#125;);<span class="javascript">        <span class="hljs-built_in">document</span>.addEventListener(<span class="hljs-string">"webkitfullscreenchange"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><span class="actionscript">            FShandler(<span class="hljs-string">"webkit"</span>)</span>        &#125;);<span class="javascript">        <span class="hljs-built_in">document</span>.addEventListener(<span class="hljs-string">"mozfullscreenchange"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><span class="actionscript">            FShandler(<span class="hljs-string">"moz"</span>)</span>        &#125;);<span class="actionscript">        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">FShandler</span><span class="hljs-params">(val)</span> </span>&#123;</span><span class="javascript">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"change! : "</span> + val)</span>        &#125;<span class="javascript">        <span class="hljs-built_in">document</span>.addEventListener(<span class="hljs-string">"MSFullscreenChange"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><span class="javascript">            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">document</span>.msFullscreenElement != <span class="hljs-literal">null</span>) &#123;</span><span class="javascript">                <span class="hljs-built_in">console</span>.info(<span class="hljs-string">"Went full screen"</span>);</span><span class="actionscript">            &#125; <span class="hljs-keyword">else</span> &#123;</span><span class="javascript">                <span class="hljs-built_in">console</span>.info(<span class="hljs-string">"Exited full screen"</span>);</span>            &#125;        &#125;);    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>手动触发页面resize事件.md</title>
    <link href="/2020/06/19/%E6%89%8B%E5%8A%A8%E8%A7%A6%E5%8F%91%E9%A1%B5%E9%9D%A2resize%E4%BA%8B%E4%BB%B6/"/>
    <url>/2020/06/19/%E6%89%8B%E5%8A%A8%E8%A7%A6%E5%8F%91%E9%A1%B5%E9%9D%A2resize%E4%BA%8B%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>涉及到的事件：window.onresize,document.createEvent()</p><pre><code class="hljs javascript">&lt;html lang=<span class="hljs-string">"en"</span>&gt;&lt;head&gt;    &lt;meta charset=<span class="hljs-string">"UTF-8"</span>&gt;    &lt;meta name=<span class="hljs-string">"viewport"</span> content=<span class="hljs-string">"width=device-width, initial-scale=1.0"</span>&gt;    &lt;title&gt;js <span class="hljs-built_in">window</span> resize&lt;<span class="hljs-regexp">/title&gt;</span><span class="hljs-regexp">&lt;/</span>head&gt;&lt;body&gt;    &lt;button id=<span class="hljs-string">"fire-resize"</span>&gt;点击触发<span class="hljs-built_in">window</span> resize&lt;<span class="hljs-regexp">/button&gt;</span><span class="hljs-regexp">&lt;/</span>body&gt;&lt;script&gt;    <span class="hljs-keyword">var</span> btn = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"fire-resize"</span>);    btn.addEventListener(<span class="hljs-string">"click"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;        fireResize()    &#125;)    <span class="hljs-built_in">window</span>.onresize = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;        alert(<span class="hljs-string">'触发成功'</span>);    &#125;;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fireResize</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">document</span>.createEvent) &#123; <span class="hljs-comment">// chrome</span>            <span class="hljs-keyword">var</span> event = <span class="hljs-built_in">document</span>.createEvent(<span class="hljs-string">"HTMLEvents"</span>);            event.initEvent(<span class="hljs-string">"resize"</span>, <span class="hljs-literal">true</span>, <span class="hljs-literal">true</span>);            <span class="hljs-built_in">window</span>.dispatchEvent(event);        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">document</span>.createEventObject) &#123;  <span class="hljs-comment">// IE不一定有效，会报错</span>            <span class="hljs-built_in">window</span>.fireEvent(<span class="hljs-string">"onresize"</span>);        &#125;    &#125;&lt;<span class="hljs-regexp">/script&gt;</span><span class="hljs-regexp"></span><span class="hljs-regexp">&lt;/</span>html&gt;</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>React Spin 页面数据加载动画处理</title>
    <link href="/2020/06/15/React%20Spin%E9%A1%B5%E9%9D%A2%E6%95%B0%E6%8D%AE%E5%8A%A0%E8%BD%BD%E5%8A%A8%E7%94%BB%E5%A4%84%E7%90%86/"/>
    <url>/2020/06/15/React%20Spin%E9%A1%B5%E9%9D%A2%E6%95%B0%E6%8D%AE%E5%8A%A0%E8%BD%BD%E5%8A%A8%E7%94%BB%E5%A4%84%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>页面局部处于等待异步数据或正在渲染过程时，合适的加载动效会有效缓解用户的焦虑。（引用antd Spin组件定义）</p><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><ol><li>前端框架页面首屏加载</li><li>form表单等组件从后台初次获取、更新内容时的渲染</li></ol><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="ant-design-spin-component"><a href="#ant-design-spin-component" class="headerlink" title="ant design spin component"></a>ant design<a href="https://ant.design/components/spin-cn/" target="_blank" rel="noopener"> spin component</a></h3><p>ant design的组件可以自定义，使用组件应该关注其兼容性的处理</p><h3 id="生命周期中处理渲染"><a href="#生命周期中处理渲染" class="headerlink" title="生命周期中处理渲染"></a>生命周期中处理渲染</h3><p>加载页面时的处理方式：在<code>comoonentWillMount</code>中定义一个当前开始加载的状态，直到<code>componentDidMount</code>时切换渲染已经完全加载完的组件内容。<br>此方式在更新组件内容时<code>componentWillUpdate</code>也同步可以处理。<br>可以定时一段时间来关闭加载状态，具体实现方式随所需效果和接口返回的时间具体处理。</p><pre><code class="hljs javascript">componentWillMount () &#123;  <span class="hljs-keyword">let</span> dom = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">'isloading'</span>)  <span class="hljs-keyword">if</span> (isLoading) &#123;    dom.setAttribute(<span class="hljs-string">'class'</span>, <span class="hljs-string">'is-loading'</span>)    setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;      dom.style.display = <span class="hljs-string">'none'</span>      <span class="hljs-keyword">this</span>.setState(&#123;<span class="hljs-attr">isLoading</span>: <span class="hljs-literal">false</span>&#125;);    &#125;, <span class="hljs-number">1000</span>)  &#125;&#125;</code></pre><h2 id="loading-UI-库"><a href="#loading-UI-库" class="headerlink" title="loading UI 库"></a>loading UI 库</h2><ul><li><a href="https://codepen.io/topic/loader/picks" target="_blank" rel="noopener">CodepenIO Loader Picks</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>react</tag>
      
      <tag>animation</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
